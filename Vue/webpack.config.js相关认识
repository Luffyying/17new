var path = require('path')
var webpack = require('webpack')
const htmlWebpackPlugin = require('html-webpack-plugin')
/*
  这里引入node下一个模块:glob,npm install glob,这个glob工具基于javascript.它使用了 minimatch 库来进行匹配
  这里用到了：动态查找所有入口文件,同步获取到任何匹配文件,如果是异步的可以采用回调的形式
*/
const TPL_PATH = path.resolve(__dirname, '../static/src/template.ejs')
const INX_SERVER_PATH = path.resolve(__dirname, '/src/main/resources/view/index.html')
var glob = require('glob');
console.log(glob);
var files = glob.sync('/src/apps/paper/index.js');
console.log('00000000000000000000');
console.log(files);
var newEntries = {};
files.forEach(function(f){
  //之所以将名字这样改是可以生成符合src下目录的结构
  var name = /.*\(apps\/.*?\/index\.js)/.exec(f)[1]
  newEntries[name] = f;
});
// //Object.assign()方法用于将所有可枚举的属性的值从一个或者多个源对象复制到目标对象，返回目标对象
//Object.assign(target,...sources)
//config.entry = Object.assign({},config.entry,newEntries);

console.log(newEntries);
module.exports = {
  entry:{
    a:'./src/main.js',
    'apps/paper/index.js':'./src/apps/paper/index.js'
  },
  //entry:'./src/main.js',
  output:{
    path:path.resolve(__dirname, './dist'),
    publicPath:'/dist',
    filename:'js/[name].[hash].js'
    //filename:'js/[hash].js'
  },
  // entry: './src/main.js',
  // output: {
  //   path: path.resolve(__dirname, './dist'),
  //   publicPath: '/dist/',
  //   filename: 'build.js'
  // },
  module: {
    rules: [
      {
        test: /\.vue$/,
        loader: 'vue-loader',
        options: {
          loaders: {
            // Since sass-loader (weirdly) has SCSS as its default parse mode, we map
            // the "scss" and "sass" values for the lang attribute to the right configs here.
            // other preprocessors should work out of the box, no loader config like this necessary.
            'scss': 'vue-style-loader!css-loader!sass-loader',
            'sass': 'vue-style-loader!css-loader!sass-loader?indentedSyntax'
          }
          // other vue-loader options go here
        }
      },
      {
        test: /\.js$/,
        loader: 'babel-loader',
        exclude: /node_modules/
      },
      {
        test: /\.(png|jpg|gif|svg)$/,
        loader: 'file-loader',
        options: {
          name: '[name].[ext]?[hash]'
        }
      }
    ]
  },
  resolve: {
    alias: {
      'vue$': 'vue/dist/vue.esm.js'
    }
  },
  devServer: {
    historyApiFallback: true,
    noInfo: true
  },
  plugins:[
     new webpack.optimize.CommonsChunkPlugin({ //抽取所有的js的公用部分，放到vendor
            names: ['vendor']
        }),
    new htmlWebpackPlugin({
          filename: INX_SERVER_PATH,
          template: TPL_PATH,
          title: "打包打包",
    })
  ],
  performance: {
    hints: false
  },
  devtool: '#eval-source-map'
}

if (process.env.NODE_ENV === 'production') {
  module.exports.devtool = '#source-map'
  // http://vue-loader.vuejs.org/en/workflow/production.html
  module.exports.plugins = (module.exports.plugins || []).concat([
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: '"production"'
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      sourceMap: true,
      compress: {
        warnings: false
      }
    }),
    new webpack.LoaderOptionsPlugin({
      minimize: true
    })
  ])
}
